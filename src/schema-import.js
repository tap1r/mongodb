/*
 *  Name: "schema-import.js"
 *  Version: "0.1.6"
 *  Description: import schema generated by schema-sampler.js
 *  Disclaimer: https://raw.githubusercontent.com/tap1r/mongodb-scripts/master/DISCLAIMER.md
 *  Authors: ["tap1r <luke.prochazka@gmail.com>"]
 */

// Usage: "mongosh [connection options] --quiet schema-import.js"

let __script = { "name": "schema-import.js", "version": "0.1.6" };
console.log(`\n\x1b[33m#### Running script ${__script.name} v${__script.version} on shell v${version()}\x1b[0m`);

let userOptions = {
   /*
    *  user preferences
    */
   "schemaFile": "schema.json",
   // "readPreference": "primaryPreferred"
}

((userOptions = {}) => {
   function main({ schemaFile = 'schema.json', readPreference = 'primaryPreferred' }) {
      /*
       *  main
       */
      db.getMongo().setReadPref(readPreference);
      let schema = loadSchemaFile(schemaFile);
      let dbs = listDBs(schema);
      // pretty(dbs);
      // parse and create DB namespaces
      // parse and create collections with data
      // parse and create indexes
      // parse and create views

      return;
   }

   function loadSchemaFile(file) {
      try {
         return JSON.parse(fs.readFileSync(file, 'utf8'));
      } catch(e) {
         console.dir(e.stack);
      }

      return;
   }

   function listDBs(schema) {
      let dbNames = [];
      for (let i = 0; i < schema.length; ++i) {
         console.log(schema[i].db);
      }

      return dbNames;
   }

   function pretty(json) {
      /*
       *  report
       */
      console.log('\n');
      // console.log(JSON.stringify(schema, null, '  '));
      console.dir(json);
      console.log('\n');

      return;
   }

   main(userOptions);
})(userOptions);

// EOF
